# name: Check and upgrade the GKE version of all GCP stacks

# on:
#   workflow_dispatch:
#     inputs:
#       gke-minor-version:
#         description: "GKE minor version to upgrade to"
#         required: false
#         type: string

# permissions:
#   contents: write
#   pull-requests: write

# env:
#   GH_TOKEN: ${{ github.token }}

# jobs:
#   upgrade-gke-version:
#     strategy:
#       matrix:
#         kbc-stacks: [
#             test-stack,
#           ]
#     continue-on-error: true
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4.1.1
#       - name: Set up Python 3.12
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.12"
#       - uses: robinraju/release-downloader@v1.9
#         with:
#           repository: "keboola/gke-upgrade-tool"
#           latest: true
#       - name: Setup environment
#         run: |
#           pip install gke*.tar.gz
#           git config user.name github-actions
#           git config user.email github-actions@github.com
#           if [ -n "${{ inputs.gke-minor-version }}" ]; then
#             echo "GKE_TOOL_ARGS=${{ matrix.kbc-stacks }}/terraform/env.yaml -m ${{ inputs.gke-minor-version }}" >> $GITHUB_ENV
#           else
#             echo "GKE_TOOL_ARGS=${{ matrix.kbc-stacks }}/terraform/env.yaml" >> $GITHUB_ENV
#           fi
#       - name: Deploy maintenance servers
#         run: |
#           sed -i 's/MAINTENANCE_SERVER_INSTANCE_COUNT: 0/MAINTENANCE_SERVER_INSTANCE_COUNT: 1/' ${{ matrix.kbc-stacks }}/terraform/env.yaml
#           git checkout -b ${{ matrix.kbc-stacks }}-gke-upgrade-1
#           git branch --show-current
#           git commit -am "Upgrade GKE cluster #1 (Scale up maintenance server)"
#           git push origin --set-upstream ${{ matrix.kbc-stacks }}-gke-upgrade-1
#           PR_BODY=$(
#           cat <<END_HEREDOC
#           Scaling up maintenance server to 1 instance on **${{ matrix.kbc-stacks }}** stack.
#           END_HEREDOC
#           )
#           gh pr create --title "Upgrade GKE cluster #1 (Scale up maintenance server)" --body "Test PR" --base ${{ github.ref_name }} --head ${{ matrix.kbc-stacks }}-gke-upgrade-1
#       - name: Turn on maintenance mode
#         run: |
#           sed -i 's/MAINTENANCE_ENABLED: false/MAINTENANCE_ENABLED: true/' ${{ matrix.kbc-stacks }}/terraform/env.yaml
#           git checkout -b ${{ matrix.kbc-stacks }}-gke-upgrade-2
#           git branch --show-current
#           git commit -am "Upgrade GKE cluster #2 (Turn on maintenance mode)"
#           git push origin --set-upstream ${{ matrix.kbc-stacks }}-gke-upgrade-2
#           PR_BODY=$(
#           cat <<END_HEREDOC
#           Turning on maintenance mode for **${{ matrix.kbc-stacks }}** stack.
#           END_HEREDOC
#           )
#           gh pr create --title "Upgrade GKE cluster #2 (Turn on maintenance mode)" --body "Test PR" --base ${{ matrix.kbc-stacks }}-gke-upgrade-1 --head ${{ matrix.kbc-stacks }}-gke-upgrade-2
#       - name: Update env.yaml (Version upgrade and active node pool switch)
#         run: |
#           git branch --show-current
#           gke-upgrade-tool $GKE_TOOL_ARGS
#           git checkout -b ${{ matrix.kbc-stacks }}-gke-upgrade-3
#           git branch --show-current
#           git commit -am "Upgrade GKE cluster #3 (Upgrade GKE, switch active pool)"
#           git push origin --set-upstream ${{ matrix.kbc-stacks }}-gke-upgrade-3
#           PR_BODY=$(
#           cat <<END_HEREDOC
#           Upgrading GKE version and switching active node pools on **${{ matrix.kbc-stacks }}** stack.
#           END_HEREDOC
#           )
#           gh pr create --title "Upgrade GKE cluster #3 (Upgrade GKE, switch active pool)" --body "Test PR" --base ${{ matrix.kbc-stacks }}-gke-upgrade-2 --head ${{ matrix.kbc-stacks }}-gke-upgrade-3
#       - name: Update env.yaml (Non-active nodepool version upgrade)
#         run: |
#           git branch --show-current
#           gke-upgrade-tool $GKE_TOOL_ARGS
#           git checkout -b ${{ matrix.kbc-stacks }}-gke-upgrade-4
#           git commit -am "Upgrade GKE cluster #4 (Upgrade GKE on non-active pool)"
#           git push origin --set-upstream ${{ matrix.kbc-stacks }}-gke-upgrade-4
#           PR_BODY=$(
#           cat <<END_HEREDOC
#           Upgrading GKE version on non-active node pools on **${{ matrix.kbc-stacks }}** stack.
#           END_HEREDOC
#           )
#           gh pr create --title "Upgrade GKE cluster #4 (Upgrade GKE on non-active pool)" --body "Test PR" --base ${{ matrix.kbc-stacks }}-gke-upgrade-3 --head ${{ matrix.kbc-stacks }}-gke-upgrade-4
#       - name: Turn off maintenance mode
#         run: |
#           sed -i 's/MAINTENANCE_ENABLED: true/MAINTENANCE_ENABLED: false/' ${{ matrix.kbc-stacks }}/terraform/env.yaml
#           git checkout -b ${{ matrix.kbc-stacks }}-gke-upgrade-5
#           git branch --show-current
#           git commit -am "Upgrade GKE cluster #5 (Turn off maintenance mode)"
#           git push origin --set-upstream ${{ matrix.kbc-stacks }}-gke-upgrade-5
#           PR_BODY=$(
#           cat <<END_HEREDOC
#           Turning off maintenance mode on **${{ matrix.kbc-stacks }}** stack.
#           END_HEREDOC
#           )
#           gh pr create --title "Upgrade GKE cluster #5 (Turn off maintenance mode)" --body "Test PR" --base ${{ matrix.kbc-stacks }}-gke-upgrade-4 --head ${{ matrix.kbc-stacks }}-gke-upgrade-5
#       - name: Disable maintenance servers
#         run: |
#           sed -i 's/MAINTENANCE_SERVER_INSTANCE_COUNT: 1/MAINTENANCE_SERVER_INSTANCE_COUNT: 0/' ${{ matrix.kbc-stacks }}/terraform/env.yaml
#           git checkout -b ${{ matrix.kbc-stacks }}-gke-upgrade-6
#           git branch --show-current
#           git commit -am "Upgrade GKE cluster #6 (Scale down maintenance server)"
#           git push origin --set-upstream ${{ matrix.kbc-stacks }}-gke-upgrade-6
#           cat <<END_HEREDOC
#           Scaling maintenance server to 0 on **${{ matrix.kbc-stacks }}** stack.
#           END_HEREDOC
#           )
#           gh pr create --title "Upgrade GKE cluster #6 (Scale down maintenance server)" --body "Test PR" --base ${{ matrix.kbc-stacks }}-gke-upgrade-5 --head ${{ matrix.kbc-stacks }}-gke-upgrade-6
name: Check and upgrade the GKE version of a single GCP stack

on:
  workflow_dispatch:
    inputs:
      # kbc-stack:
      #   description: "KBC stack to upgrade"
      #   required: false
      #   type: string
      gke-minor-version:
        description: "GKE minor version to upgrade to"
        required: false
        type: string
      jira-ticket:
        description: "Related JIRA ticket"
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  upgrade-gke-version:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kbc-stacks: [test-stack, test-2-stack]
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - uses: ./.github/actions
        with:
          kbc-stack: ${{ matrix.kbc-stacks }}
          gke-minor-version: ${{ inputs.gke-minor-version }}
          jira-ticket: ${{ inputs.jira-ticket }}
    # runs-on: ubuntu-latest
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v4.1.1
    #   - name: Set up Python 3.12
    #     uses: actions/setup-python@v5
    #     with:
    #       python-version: "3.12"
    #   - uses: robinraju/release-downloader@v1.9
    #     with:
    #       repository: "keboola/gke-upgrade-tool"
    #       latest: true
    #   - name: Setup environment
    #     run: |
    #       pip install gke*.tar.gz
    #       git config user.name github-actions
    #       git config user.email github-actions@github.com
    #       if [ -n "${{ inputs.gke-minor-version }}" ]; then
    #         echo "GKE_TOOL_ARGS=${{ inputs.kbc-stack }}/terraform/env.yaml -m ${{ inputs.gke-minor-version }}" >> $GITHUB_ENV
    #       else
    #         echo "GKE_TOOL_ARGS=${{ inputs.kbc-stack }}/terraform/env.yaml" >> $GITHUB_ENV
    #       fi
    #       if [ -n "${{ inputs.jira-ticket }}" ]; then
    #         PR_BODY=$(
    #         cat <<END_HEREDOC
    #       Relates to [${{ inputs.jira-ticket }}](https://keboola.atlassian.net/browse/${{ inputs.jira-ticket }}).
    #       END_HEREDOC
    #       )
    #       echo "PR_BODY=$PR_BODY" >> $GITHUB_ENV
    #       fi
    #   - name: Deploy maintenance servers
    #     run: |
    #       sed -i 's/MAINTENANCE_SERVER_INSTANCE_COUNT: 0/MAINTENANCE_SERVER_INSTANCE_COUNT: 1/' ${{ inputs.kbc-stack }}/terraform/env.yaml
    #       git checkout -b ${{ inputs.kbc-stack }}-gke-upgrade-1
    #       git branch --show-current
    #       git commit -am "Upgrade GKE cluster #1 (Scale up maintenance server)"
    #       git push origin --set-upstream ${{ inputs.kbc-stack }}-gke-upgrade-1
    #       PR_BODY=$(
    #       cat <<END_HEREDOC
    #       $PR_BODY

    #       Scaling up maintenance server to 1 instance on **${{ inputs.kbc-stack }}** stack.
    #       END_HEREDOC
    #       )
    #       gh pr create --title "Upgrade GKE cluster #1 (Scale up maintenance server)" --body "$PR_BODY" --base ${{ github.ref_name }} --head ${{ inputs.kbc-stack }}-gke-upgrade-1
    #   - name: Turn on maintenance mode
    #     run: |
    #       sed -i 's/MAINTENANCE_ENABLED: false/MAINTENANCE_ENABLED: true/' ${{ inputs.kbc-stack }}/terraform/env.yaml
    #       git checkout -b ${{ inputs.kbc-stack }}-gke-upgrade-2
    #       git branch --show-current
    #       git commit -am "Upgrade GKE cluster #2 (Turn on maintenance mode)"
    #       git push origin --set-upstream ${{ inputs.kbc-stack }}-gke-upgrade-2
    #       PR_BODY=$(
    #       cat <<END_HEREDOC
    #       $PR_BODY

    #       Turning on maintenance mode for **${{ inputs.kbc-stack }}** stack.
    #       END_HEREDOC
    #       )
    #       gh pr create --title "Upgrade GKE cluster #2 (Turn on maintenance mode)" --body "$PR_BODY" --base ${{ inputs.kbc-stack }}-gke-upgrade-1 --head ${{ inputs.kbc-stack }}-gke-upgrade-2
    #   - name: Update env.yaml (Version upgrade and active node pool switch)
    #     run: |
    #       git branch --show-current
    #       gke-upgrade-tool $GKE_TOOL_ARGS
    #       git checkout -b ${{ inputs.kbc-stack }}-gke-upgrade-3
    #       git branch --show-current
    #       git commit -am "Upgrade GKE cluster #3 (Upgrade GKE, switch active pools)"
    #       git push origin --set-upstream ${{ inputs.kbc-stack }}-gke-upgrade-3
    #       PR_BODY=$(
    #       cat <<END_HEREDOC
    #       $PR_BODY

    #       Upgrading GKE version and switching active node pools on **${{ inputs.kbc-stack }}** stack.
    #       END_HEREDOC
    #       )
    #       gh pr create --title "Upgrade GKE cluster #3 (Upgrade GKE, switch active pool)" --body "$PR_BODY" --base ${{ inputs.kbc-stack }}-gke-upgrade-2 --head ${{ inputs.kbc-stack }}-gke-upgrade-3
    #   - name: Update env.yaml (Non-active nodepool version upgrade)
    #     run: |
    #       git branch --show-current
    #       gke-upgrade-tool $GKE_TOOL_ARGS
    #       git checkout -b ${{ inputs.kbc-stack }}-gke-upgrade-4
    #       git commit -am "Upgrade GKE cluster #4 (Upgrade GKE on non-active pools)"
    #       git push origin --set-upstream ${{ inputs.kbc-stack }}-gke-upgrade-4
    #       PR_BODY=$(
    #       cat <<END_HEREDOC
    #       $PR_BODY

    #       Upgrading GKE version on non-active node pools on **${{ inputs.kbc-stack }}** stack.
    #       END_HEREDOC
    #       )
    #       gh pr create --title "Upgrade GKE cluster #4 (Upgrade GKE on non-active pool)" --body "$PR_BODY" --base ${{ inputs.kbc-stack }}-gke-upgrade-3 --head ${{ inputs.kbc-stack }}-gke-upgrade-4
    #   - name: Turn off maintenance mode
    #     run: |
    #       sed -i 's/MAINTENANCE_ENABLED: true/MAINTENANCE_ENABLED: false/' ${{ inputs.kbc-stack }}/terraform/env.yaml
    #       git checkout -b ${{ inputs.kbc-stack }}-gke-upgrade-5
    #       git branch --show-current
    #       git commit -am "Upgrade GKE cluster #5 (Turn off maintenance mode)"
    #       git push origin --set-upstream ${{ inputs.kbc-stack }}-gke-upgrade-5
    #       PR_BODY=$(
    #       cat <<END_HEREDOC
    #       $PR_BODY

    #       Turning off maintenance mode on **${{ inputs.kbc-stack }}** stack.
    #       END_HEREDOC
    #       )
    #       gh pr create --title "Upgrade GKE cluster #5 (Turn off maintenance mode)" --body "$PR_BODY" --base ${{ inputs.kbc-stack }}-gke-upgrade-4 --head ${{ inputs.kbc-stack }}-gke-upgrade-5
    #   - name: Disable maintenance servers
    #     run: |
    #       sed -i 's/MAINTENANCE_SERVER_INSTANCE_COUNT: 1/MAINTENANCE_SERVER_INSTANCE_COUNT: 0/' ${{ inputs.kbc-stack }}/terraform/env.yaml
    #       git checkout -b ${{ inputs.kbc-stack }}-gke-upgrade-6
    #       git branch --show-current
    #       git commit -am "Upgrade GKE cluster #6 (Scale down maintenance server)"
    #       git push origin --set-upstream ${{ inputs.kbc-stack }}-gke-upgrade-6
    #       PR_BODY=$(
    #       cat <<END_HEREDOC
    #       $PR_BODY

    #       Scaling maintenance server to 0 on **${{ inputs.kbc-stack }}** stack.
    #       END_HEREDOC
    #       )
    #       gh pr create --title "Upgrade GKE cluster #6 (Scale down maintenance server)" --body "$PR_BODY" --base ${{ inputs.kbc-stack }}-gke-upgrade-5 --head ${{ inputs.kbc-stack }}-gke-upgrade-6
